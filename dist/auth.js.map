{"version":3,"sources":["../src/auth.ts"],"sourcesContent":["/**\n * The authentication-related part of this SDK.\n *\n * The `default` class is `CSCAuth`.\n *\n * @module\n */\nimport myzod from \"myzod\";\nimport GetAccessToken from \"./logic/auth/get_access_token\";\nimport GetUserInfo from \"./logic/auth/get_user_info\";\nimport RevokeAccessToken from \"./logic/auth/revoke_access_token\";\nimport SetIdentity from \"./logic/auth/set_ident\";\nimport type { AuthTokenResponse, AuthUserResponse } from \"./types\";\nimport { AuthTokenResponseSchema, AuthUserResponseSchema } from \"./types\";\n\n/**\n * The structure that `CSCAuth.export()` will return.\n */\nexport const CSCAuthExportStructure = myzod.object({\n  gIdToken: myzod.string(),\n  gAccessToken: myzod.string(),\n  accessData: AuthTokenResponseSchema.optional(),\n});\n\n/**\n * The CSCheckin authentication manager.\n */\nexport default class CSCAuth {\n  private accessData: AuthTokenResponse | null = null;\n\n  /**\n   * Construct this manager.\n   *\n   * @param gIdToken The ID token received from Google.\n   * @param gAccessToken The access token received from Google.\n   */\n  constructor(private gIdToken: string, private gAccessToken: string) {}\n\n  /**\n   * Get the credential including token and user information.\n   */\n  async getAccessData(): Promise<AuthTokenResponse> {\n    // get lazily\n    if (!this.accessData) {\n      const accessData = await GetAccessToken({\n        id_token: this.gIdToken,\n        access_token: this.gAccessToken,\n      });\n      this.accessData = AuthTokenResponseSchema.parse(accessData);\n    }\n\n    return this.accessData;\n  }\n\n  /**\n   * Get the authentication header that can use for directly requesting API.\n   */\n  async getAuthenticationHeader(): Promise<string> {\n    const accessData = await this.getAccessData();\n    return `Bearer ${accessData.access_token}`;\n  }\n\n  /**\n   * Get the user information.\n   *\n   * The response of this API won't be cached!\n   */\n  async userInfo(): Promise<AuthUserResponse> {\n    const rawInfo = await GetUserInfo(this);\n    return AuthUserResponseSchema.parse(rawInfo);\n  }\n\n  /**\n   * Set the student class and no.\n   *\n   * @param userClass The student class.\n   * @param userNo The student no.\n   */\n  async setIdentity(userClass: string, userNo: string) {\n    return SetIdentity({ class: userClass, number: userNo }, this);\n  }\n\n  /**\n   * Revoke this access token.\n   */\n  async revoke() {\n    return RevokeAccessToken(this);\n  }\n\n  /**\n   * Import the credential from JSON-serialized CSCAuthExportStructure.\n   *\n   * @param data the JSON-serialized data from `CSCAuth.export()`.\n   */\n  static import(data: string): CSCAuth {\n    const deserialized = CSCAuthExportStructure.parse(JSON.parse(data));\n    const { gAccessToken, gIdToken, accessData } = deserialized;\n    const auth = new CSCAuth(gAccessToken, gIdToken);\n    auth.accessData = accessData || null;\n\n    return auth;\n  }\n\n  /**\n   * Export the credential to JSON-serialized CSCAuthExportStructure.\n   *\n   * @returns {string} JSON-serialized CSCAuthExportStructure\n   */\n  export(): string {\n    return JSON.stringify({\n      gAccessToken: this.gAccessToken,\n      gIdToken: this.gIdToken,\n      accessData: this.accessData,\n    });\n  }\n}\n"],"names":[],"mappings":"kFAOO,CAAK,MAAM,KAAO,SAClB,CAAc,MAAM,6BAA+B,SACnD,CAAW,MAAM,0BAA4B,SAC7C,CAAiB,MAAM,gCAAkC,SACzD,CAAW,MAAM,sBAAwB,SAEvC,uBAAuB,IAAvB,CAAuB,CAAE,sBAAsB,IAAtB,CAAsB,MAAQ,OAAS,4wBAKlE,GAAK,CAAC,sBAAsB,CAAG,CAAK,CAAC,MAAM,CAAC,CAAC,AAClD,QAAQ,CAAE,CAAK,CAAC,MAAM,GACtB,YAAY,CAAE,CAAK,CAAC,MAAM,GAC1B,UAAU,CAAE,CAAuB,CAAC,QAAQ,EAC9C,CAAC,MAKoB,OAAO,CAAb,QAAQ,yBAAF,OAAO,CASN,CAAgB,CAAU,CAAoB,uBAT/C,OAAO,OASN,QAAgB,CAAhB,CAAgB,MAAU,YAAoB,CAApB,CAAoB,CATrD,IAwFd,CAvFS,UAAU,CAA6B,IAAI,qBADhC,OAAO,GAcpB,GAAa,EAAb,aAAa,QAAnB,QAAQ,mCAAR,QAAQ,UAA0C,CAAC,IAGzC,CAAU,kEADb,IAAI,CAAC,UAAU,iCACO,CAAc,CAAC,CAAC,AACvC,QAAQ,CAAE,IAAI,CAAC,QAAQ,CACvB,YAAY,CAAE,IAAI,CAAC,YAAY,AACjC,CAAC,SAHK,CAAU,QAIhB,IAAI,CAAC,UAAU,CAAG,CAAuB,CAAC,KAAK,CAAC,CAAU,kCAGrD,IAAI,CAAC,UAAU,kDACxB,CAAC,mBAKK,GAAuB,EAAvB,uBAAuB,QAA7B,QAAQ,mCAAR,QAAQ,UAAyC,CAAC,IAC1C,CAAU,+EAAS,IAAI,CAAC,aAAa,iBAArC,CAAU,2BACR,OAAO,EAA0B,MAAA,CAAxB,CAAU,CAAC,YAAY,mDAC1C,CAAC,mBAOK,GAAQ,EAAR,QAAQ,QAAd,QAAQ,mCAAR,QAAQ,UAAoC,CAAC,IACrC,CAAO,+EAAS,CAAW,CAAC,IAAI,gBAAhC,CAAO,0BACN,CAAsB,CAAC,KAAK,CAAC,CAAO,mDAC7C,CAAC,mBAQK,GAAW,EAAX,WAAW,QAAjB,QAAQ,CAAU,CAAiB,CAAE,CAAc,kCAAnD,QAAQ,UAA6C,CAAC,uFAC7C,CAAW,CAAC,CAAC,AAAC,KAAK,CAAE,CAAS,CAAE,MAAM,CAAE,CAAM,AAAC,CAAC,CAAE,IAAI,mDAC/D,CAAC,mBAKK,GAAM,EAAN,MAAM,QAAZ,QAAQ,mCAAR,QAAQ,UAAO,CAAC,uFACP,CAAiB,CAAC,IAAI,mDAC/B,CAAC,mBAqBD,GAAM,EAAN,MAAM,QAAN,QAAQ,EAAS,CAAC,AAChB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,AACrB,YAAY,CAAE,IAAI,CAAC,YAAY,CAC/B,QAAQ,CAAE,IAAI,CAAC,QAAQ,CACvB,UAAU,CAAE,IAAI,CAAC,UAAU,AAC7B,CAAC,CACH,CAAC,KApBM,GAAM,EAAN,MAAM,QAAb,QAAQ,CAAM,CAAY,CAAW,CAAC,AACpC,GAAK,CAAC,CAAY,CAAG,sBAAsB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAI,GACzD,CAAY,CAA2B,CAAY,CAAnD,YAAY,CAAE,CAAQ,CAAiB,CAAY,CAArC,QAAQ,CAAE,CAAU,CAAK,CAAY,CAA3B,UAAU,CACpC,CAAI,CAAG,GAAG,CAAC,OAAO,CAAC,CAAY,CAAE,CAAQ,EAG/C,MAAM,CAFN,CAAI,CAAC,UAAU,CAAG,CAAU,EAAI,IAAI,CAE7B,CAAI,AACb,CAAC,IA1EkB,OAAO,WAAP,OAAO"}